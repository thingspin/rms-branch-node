[{"id":"d4a9e4d7.d2ec48","type":"tab","label":"(지사) MQTT Topics Logging","disabled":true,"info":""},{"id":"adb69215.3727a","type":"tab","label":"(지사) 테스트결과 수신","disabled":false,"info":"1. Reference : \n   - MODEL LIST\n   - ALRAM RULE\n   - CPK RULE\n \n2. Calculaton :\n   - CPK per INSPECTION ITEM\n   - ALRAM per INSPECTION ITEM\n   - ALRAM per CHANNEL OF TEST MACHINE\n\n3. Output :\n   - ORIGINAL + CPK TO MSSQL\n   - ALRAM TO MSSQL\n   - ALRAM TO MQTT"},{"id":"ad053556.7d5398","type":"tab","label":"CPK and Alram Calculation","disabled":false,"info":""},{"id":"d12314b9.9685e8","type":"tab","label":"ToDB","disabled":false,"info":""},{"id":"9f219e3c.e6e46","type":"mqtt-broker","z":"","name":"Local MQTT Broker","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"f2efe6cb.ca58e8","type":"MSSQL-CN","z":"","name":"Local MS-SQL Server","server":"219.251.4.237","encyption":false,"database":"thingspin-v0"},{"id":"1dc9e4a.7d2ed1b","type":"influxdb","z":"","hostname":"219.251.4.237","port":"8086","protocol":"http","database":"thingspin","name":"rms-branch-influxdb","usetls":false,"tls":""},{"id":"6b8aec03.743554","type":"mqtt-broker","z":"","name":"MQTT(RMS BRANCH)","broker":"219.251.4.237","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"35d824ed.29e69c","type":"influxdb","z":"","hostname":"localhost","port":"8086","protocol":"http","database":"thingspin","name":"rms-branch-influxdb","usetls":false,"tls":""},{"id":"25b3ac9e.9ed5f4","type":"mqtt in","z":"d4a9e4d7.d2ec48","name":"Local MQTT Recv : #","topic":"#","qos":"0","broker":"9f219e3c.e6e46","x":143.5,"y":98,"wires":[["9d8027f.92debd8","231379e3.6cd7c6"]]},{"id":"9d8027f.92debd8","type":"function","z":"d4a9e4d7.d2ec48","name":"데이터 전처리","func":"var result = {\n    payload: JSON.stringify(msg)\n}\nreturn result;","outputs":1,"noerr":0,"x":340,"y":180,"wires":[["af87a7da.8ed668","896c9640.2d7fd8"]]},{"id":"733d8011.acc2e","type":"comment","z":"d4a9e4d7.d2ec48","name":"한국 지사 Broker : 219.251.4.237:1883","info":"","x":192.5,"y":51,"wires":[]},{"id":"896c9640.2d7fd8","type":"debug","z":"d4a9e4d7.d2ec48","name":"메세지 디버거","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":700,"y":180,"wires":[]},{"id":"231379e3.6cd7c6","type":"debug","z":"d4a9e4d7.d2ec48","name":"메세지 디버거","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":700,"y":100,"wires":[]},{"id":"b81ce03e.b44","type":"debug","z":"d4a9e4d7.d2ec48","name":"메세지 디버거","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":700,"y":260,"wires":[]},{"id":"af87a7da.8ed668","type":"MSSQL","z":"d4a9e4d7.d2ec48","mssqlCN":"f2efe6cb.ca58e8","name":"t_mqtt_log테이블에 데이터 추가 쿼리","query":"insert into t_mqtt_log (CONTENTS) values (\n    '{{{payload}}}'\n)","outField":"","x":410,"y":260,"wires":[["b81ce03e.b44"]]},{"id":"bfa3a0f6.8b468","type":"mqtt in","z":"adb69215.3727a","name":"+/INSPT/+/+ __","topic":"+/INSPT/+/+","qos":"0","broker":"6b8aec03.743554","x":140,"y":640,"wires":[["157cec35.353fd4"]]},{"id":"79b841ad.de7b9","type":"mqtt in","z":"adb69215.3727a","name":"INSPPROP/#","topic":"INSPPROP/#","qos":"2","broker":"6b8aec03.743554","x":130,"y":370,"wires":[["52e48f00.5ee9d"]]},{"id":"989fb636.fbbeb8","type":"debug","z":"adb69215.3727a","name":"LOG: 검사항목","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":872,"y":369.3333501815796,"wires":[]},{"id":"1322e01c.932d5","type":"mqtt in","z":"adb69215.3727a","name":"ACTINADV/#","topic":"ACTINADV/#","qos":"2","broker":"6b8aec03.743554","x":133.16669082641602,"y":510.3333435058594,"wires":[["49aac673.9d9318"]]},{"id":"4114c8b3.d1dd68","type":"debug","z":"adb69215.3727a","name":"LOG: 조치 룰","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":866.1666870117188,"y":508.66668128967285,"wires":[]},{"id":"157cec35.353fd4","type":"json","z":"adb69215.3727a","name":"","property":"payload","action":"","pretty":false,"x":336.0000114440918,"y":666.6668281555176,"wires":[["2bc9117c.ccb2ee"]]},{"id":"53d6c99.ac49338","type":"mqtt in","z":"adb69215.3727a","name":"+/INSPTDEV/+/+","topic":"+/INSPTDEV/+/+","qos":"0","broker":"6b8aec03.743554","x":139.83331298828125,"y":695.6666688919067,"wires":[["157cec35.353fd4"]]},{"id":"d94eb3c7.46bc2","type":"function","z":"adb69215.3727a","name":"Store in Global","func":"var token = msg.topic.split('/');\n\nfor ( var t in token ) {\n    if(token[t] == \"INSPPROP\") {\n        msg.payload.ID = parseInt(token[parseInt(t)+1]);\n        break;\n    }\n}\n\nif ((\"ID\" in msg.payload) !== true) {\n    return;\n}\n\nvar prop = msg.payload;\n\nvar map = global.get(\"INSPPROP\");\n\nif(map === null) {\n    map = new Map();\n}\n\nmap.set(prop.ID, prop);\n\nglobal.set(\"INSPPROP\", map);\n\nreturn msg;","outputs":1,"noerr":0,"x":540.9999923706055,"y":369.6666831970215,"wires":[["989fb636.fbbeb8"]]},{"id":"52e48f00.5ee9d","type":"json","z":"adb69215.3727a","name":"","property":"payload","action":"","pretty":false,"x":340,"y":370,"wires":[["d94eb3c7.46bc2"]]},{"id":"3576657f.c54c2a","type":"inject","z":"adb69215.3727a","name":"","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":250,"wires":[["b003628a.38386"]]},{"id":"b003628a.38386","type":"function","z":"adb69215.3727a","name":"YYYYMMDD","func":"Date.prototype.yyyymmdd = function() {\n  var mm = this.getMonth() + 1; // getMonth() is zero-based\n  var dd = this.getDate();\n\n  return [this.getFullYear(),\n          (mm>9 ? '' : '0') + mm,\n          (dd>9 ? '' : '0') + dd\n         ].join('');\n};\n\nvar date = new Date();\ndate.yyyymmdd();\n\nglobal.set(\"YYYYMMDD\", date.yyyymmdd());\n\nreturn;","outputs":1,"noerr":0,"x":350,"y":250,"wires":[[]]},{"id":"88c1b025.12d23","type":"inject","z":"adb69215.3727a","name":"reset globals","topic":"thingspin","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":120,"wires":[["e94a6823.7fb7b8"]]},{"id":"e94a6823.7fb7b8","type":"function","z":"adb69215.3727a","name":"reset globals","func":"global.set(\"INSPPROP\", null);\nglobal.set(\"ACTINADV\", null);\n\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":120,"wires":[["49682169.6a632"]]},{"id":"8b97350.6f8ecc8","type":"comment","z":"adb69215.3727a","name":"[검사항목리스트를 FLOW 컨텍스트에 저장_________]","info":"","x":210,"y":320,"wires":[]},{"id":"f8f51a31.6c6528","type":"comment","z":"adb69215.3727a","name":"[저장소 이름을 구분하기 위해 YYYYMMDD를 생성___]","info":"","x":210,"y":200,"wires":[]},{"id":"d5401c38.fe64","type":"comment","z":"adb69215.3727a","name":"[관리자용 내부변수 초기화______________________]","info":"","x":210,"y":60,"wires":[]},{"id":"bb7e62b8.f1b33","type":"comment","z":"adb69215.3727a","name":"[사전조치 항목: 연속불량 알림 계산 룰, CPK 계속 룰을  FLOW 컨텍스트에 저장]","info":"","x":290,"y":460,"wires":[]},{"id":"e8a68ffb.25896","type":"comment","z":"adb69215.3727a","name":"[시험결과를 받아 DB 포맷으로 변경 ___________________________________]","info":"","x":287.83331298828125,"y":595.6666450500488,"wires":[]},{"id":"49aac673.9d9318","type":"json","z":"adb69215.3727a","name":"","property":"payload","action":"","pretty":false,"x":337.16668701171875,"y":509,"wires":[["ba15606f.56921"]]},{"id":"ba15606f.56921","type":"function","z":"adb69215.3727a","name":"Store in Global","func":"var token = msg.topic.split('/');\n\nfor ( var t in token ) {\n    if(token[t] == \"ACTINADV\") {\n        msg.payload.ID = parseInt(token[parseInt(t)+1]);\n        break;\n    }\n}\n\nif ((\"ID\" in msg.payload) !== true) {\n    return;\n}\n\nvar prop = msg.payload;\n\nvar map = global.get(\"ACTINADV\");\n\nif(map === null) {\n    map = new Map();\n}\n\nmap.set(prop.ID, prop);\n\nglobal.set(\"ACTINADV\", map);\n\nreturn msg;","outputs":1,"noerr":0,"x":546.1666870117188,"y":509.3333740234375,"wires":[["4114c8b3.d1dd68"]]},{"id":"2bc9117c.ccb2ee","type":"function","z":"adb69215.3727a","name":"RECORDS","func":"//=========================================================\nvar YYYYMMDD = global.get(\"YYYYMMDD\");\nvar inspprop = global.get(\"INSPPROP\");\n\nif ((YYYYMMDD === null) || (inspprop === null)) {\n    return;\n}\n\nvar mesINSP = \"inspection.summary-\" + YYYYMMDD;\nvar mesDETL = 'inspection.detail-' + YYYYMMDD;\n\n//=========================================================\nvar details = msg.payload.details;\ndelete msg.payload.details;\n\nvar inspection = msg.payload;\n\nif(inspection.prodModel === null || inspection.prodModel === undefined)\n{\n    //node.warn(\"inspection header include bad model code.\");\n    return null;\n}\n\n//=========================================================\ninspection = {\n    measurement: mesINSP,\n    tags: {\n        facility: inspection.pcID,\n        channel: inspection.channel,\n        model: inspection.prodModel,\n        pass: inspection.pass\n    },\n    fields: {\n        tuid: msg._msgid,\n        stime: inspection.startTime,\n        etime: inspection.endTime\n    }    \n};\n\n//=========================================================\nvar transaction = details.map(\n    function(point) {\n        return {\n            measurement: mesDETL,\n            tags : {\n                facility: msg.payload.pcID,\n                channel: msg.payload.channel,\n                model: msg.payload.prodModel,\n                iid: point.iid,\n                pass: point.pass\n            },\n            fields: {\n                tuid: msg._msgid,\n                val: point.val,\n                min: point.min,\n                max: point.max,\n                inm: inspprop.get(point.iid).NAME || \"\"\n            }\n\n        };\n    }\n);\n\ntransaction.unshift(inspection);\n\n//=========================================================\nmsg.payload = transaction;\n\nreturn msg;","outputs":1,"noerr":0,"x":537.8333129882812,"y":665.6666450500488,"wires":[["69bb37cb.2f81a8"]]},{"id":"69bb37cb.2f81a8","type":"link out","z":"adb69215.3727a","name":"inspection-results-out","links":["91c8e20d.ec771"],"x":732.8333129882812,"y":665.6666450500488,"wires":[]},{"id":"80deef68.7157d","type":"comment","z":"adb69215.3727a","name":"To CPK 계산","info":"","x":867.8333129882812,"y":665.6666450500488,"wires":[]},{"id":"49682169.6a632","type":"link out","z":"adb69215.3727a","name":"reset-out","links":["3fd3dba8.5934f4"],"x":495,"y":120,"wires":[]},{"id":"f62c24af.8213a8","type":"comment","z":"ad053556.7d5398","name":"[ 플로우 변수 초기화 ______________________]","info":"","x":190,"y":30,"wires":[]},{"id":"91c8e20d.ec771","type":"link in","z":"ad053556.7d5398","name":"inspection-result-receive","links":["69bb37cb.2f81a8"],"x":55,"y":270,"wires":[["dc32119.8f462f"]]},{"id":"dc32119.8f462f","type":"function","z":"ad053556.7d5398","name":"cep","func":"var sa = global.get(\"stats-analysis\");\nvar sm = global.get(\"statistical-methods\");\nvar cepT = flow.get(\"cepTABLE\");\nif ((cepT === undefined) || cepT === null) {\n    node.warn(\"CEP context (cepT) being intialized...\");\n    cepT = new Map();\n    flow.set(\"cepTABLE\", cepT);\n}\n\nvar ruleT = global.get(\"ACTINADV\");\nif ((ruleT === undefined) || (ruleT === null)) {\n    node.error(\"A CEP (CPK calculation and monitoring & Continuos failure detection rule is not yet set!\");\n    ruleT = new Map();\n    global.set(\"ACTINADV\", ruleT);\n}\n\nvar head = msg.payload.shift();\nvar keyCH = head.tags.facility + \":\" + head.tags.channel;\nvar keyMD = keyCH + \":\" + head.tags.model;\n\nfunction __cpk(spec, v) {\n    var m = sa.mean(v);\n    var sigma = sa.stdev(v);\n\n    if(sigma === 0) {\n        sigma = 0.00000000000000000001;\n    }\n    var u = (spec.usl - m) / (3*sigma);\n    \n    var cpk;\n\n    if (spec.lsl === null) {\n        cpk = {\n            cpk: u,\n            cp: u/2\n        }\n    } else {\n        var l = (m - spec.lsl) / (3*sigma);\n        cpk = {\n            cpk: sm.min([l, u]),\n            cp: (spec.usl - spec.lsl) / (6*sigma)\n        }\n    }\n    \n    if( cpk.cp === null) cpk.cp = m;\n    if( cpk.cpk === null) cpk.cpk = m;\n\n    return cpk;\n}\n\nfunction _cpk(cep, k, so) {\n    \n    var saved = cep.get(k);\n\n    var val = saved.map(function(s) {\n        return s.fields.val;\n    });\n    \n    if (val.length <= 1) {\n        val.push(so.fields.val);\n    }\n    \n    var spec = {\n        lsl: so.fields.min, //sm.min(que.val),\n        usl: so.fields.max, //sm.max(que.val),\n    };\n\n    var c = __cpk(spec, val);\n\n    so.fields.cp = c.cp;\n    so.fields.cpk = c.cpk;\n    so.fields.usl = spec.usl;\n    so.fields.lsl = spec.lsl;\n    \n    return so;\n}\n\nfunction _store(cep, so) {\n    var key = so.tags.iid + \":\" + keyCH;\n    \n    so.key = key;\n    so.tags.fireCNF = false;\n    so.tags.fireCPK = false;\n    \n    so.fields.acc = (so.tags.pass === true) ? 0.0 : 1.0;\n    \n    var isin = cep.has(key);\n    if(!isin) {\n        cep.set(key, [so]);\n    } else {\n        var p = cep.get(key);\n        so.fields.acc = (so.tags.pass === true) ? 0.0 : parseInt(p[0].fields.acc) + 1.0;\n\n        if( p.length > 50 ) { // queue limit !\n            p.pop();\n        }\n        \n        p.unshift(so);\n        cep.set(key, p);\n    }\n\n    flow.set(\"cepTABLE\", cep);\n\n    return {key:key, so:so};\n}\n\n//===========================================================================\n// GET CPK\n//===========================================================================\nvar proc = msg.payload.map( (so) => {\n    var kso = _store(cepT, so);\n    \n    return _cpk(cepT, kso.key, kso.so);\n});\n\n//===========================================================================\n// GET ALRAM\n//===========================================================================\nfunction _alram(cep, rule, head, sos) {\n\n    var hits = [];\n\n    rule.forEach( (r) => {\n        var cf = r.CONT_FAIL;\n        if (cf !== null && cf !== undefined) {\n            var cmax = parseInt(cf.COUNT);\n\n            sos.filter ( (so) => {\n                return (r.INSPROP_IDX === so.tags.iid);\n            }).map( (so) => {\n                so.fields.cmax = cmax;\n                \n                if( so.fields.acc >= cmax) {\n                    \n                    so.tags.fireCNF = true;\n\n                    so.output = 1;\n                    hits.push(so);\n                    \n                    var p = cep.get(so.key);\n                    s = p.shift();\n                    s.fields.acc = 0;\n                    p.unshift(s);\n                    cep.set(so.key, p);\n                }\n            })\n        }\n        \n        var cpk = r.CPK;\n        if (cpk !== null && cpk !== undefined) {\n            sos.filter ( (so) => {\n                return (r.INSPROP_IDX === so.tags.iid);\n            }).map( (so) => {\n                if( (so.fields.cpk < cpk.LSL) || (so.fields.cpk < cpk.LSL) ) {\n                    so.output = 2;\n                    so.fireCPK = true;\n                    hits.push(so);\n                }\n            });\n        }        \n    });\n    \n    return hits;\n}\nvar alram = _alram(cepT, ruleT, head, proc);\n\n//===========================================================================\n// MAIN RETURN\n//===========================================================================\n\nproc.unshift(head);\nmsg.payload = proc;\n\ndelete alram.key;\n\nvar a = {\n    legth: alram.length,\n    payload: alram,\n};\n\nreturn [msg, (a.legth === 0) ? null : a];","outputs":2,"noerr":0,"x":170,"y":270,"wires":[["91ab139a.45f8b","6d719455.53c2dc"],["f8f8be5.c8c844"]]},{"id":"3fd3dba8.5934f4","type":"link in","z":"ad053556.7d5398","name":"reset-cpk-flow-in","links":["49682169.6a632"],"x":55,"y":80,"wires":[["20fa2615.aca4fa"]]},{"id":"20fa2615.aca4fa","type":"function","z":"ad053556.7d5398","name":"reset flow","func":"flow.set(\"cepTABLE\", null);\n\nreturn msg;","outputs":1,"noerr":0,"x":340,"y":80,"wires":[[]]},{"id":"8b410c30.e6c5b","type":"inject","z":"ad053556.7d5398","name":"reset-flow","topic":"air\\SQLEXPRESS","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":120,"wires":[["20fa2615.aca4fa"]]},{"id":"91ab139a.45f8b","type":"debug","z":"ad053556.7d5398","name":"cep out","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":740,"y":260,"wires":[]},{"id":"79415cdd.aa1504","type":"comment","z":"ad053556.7d5398","name":"[시험결과 연속불량과 CPK 계산_____________]","info":"","x":200,"y":209,"wires":[]},{"id":"7b4ceedb.d929b","type":"debug","z":"ad053556.7d5398","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":730,"y":300,"wires":[]},{"id":"f8f8be5.c8c844","type":"function","z":"ad053556.7d5398","name":"continuos fails","func":"//=========================================================\nvar YYYYMMDD = global.get(\"YYYYMMDD\");\n\nif (YYYYMMDD === null) {\n    return;\n}\n\nvar cnf = \"alram.continuous.failures.detail-\" + YYYYMMDD;\nvar cpk = \"alram.cpk.detail-\" + YYYYMMDD;\n\nmsg.payload.map((a) => {\n    if(a.output === 1) {\n        a.measurement = cnf;\n    } else if (a.output === 2) {\n        a.measurement = cpk;\n    }\n    \n    delete a.key;\n    delete a.output;\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":380,"y":300,"wires":[["7b4ceedb.d929b","48317cf4.590744"]]},{"id":"6d719455.53c2dc","type":"link out","z":"ad053556.7d5398","name":"toDB-inspections","links":["24c7c289.2267be","2119c461.6910fc"],"x":655,"y":260,"wires":[]},{"id":"48317cf4.590744","type":"link out","z":"ad053556.7d5398","name":"toDB-aram-continuos-failures","links":["576bb4a9.eb383c","680278aa.806178"],"x":655,"y":300,"wires":[]},{"id":"aaaa5bce.4b56a8","type":"influxdb batch","z":"d12314b9.9685e8","influxdb":"35d824ed.29e69c","precision":"ms","retentionPolicy":"","name":"","x":270,"y":150,"wires":[]},{"id":"2119c461.6910fc","type":"link in","z":"d12314b9.9685e8","name":"in-toDB-inspections","links":["6d719455.53c2dc"],"x":45,"y":90,"wires":[["aaaa5bce.4b56a8"]]},{"id":"680278aa.806178","type":"link in","z":"d12314b9.9685e8","name":"in-toDB-aram-continuos-failures","links":["48317cf4.590744"],"x":45,"y":230,"wires":[["aaaa5bce.4b56a8"]]},{"id":"5f808c32.e4fb74","type":"comment","z":"d12314b9.9685e8","name":"[ InfluxDB로 저장      ______________________]","info":"","x":200,"y":30,"wires":[]}]